{
  db: 'db.sqlite',
  blockchain: {
    // Events that will be listened to
    events: ['TotalCapacitySet', 'MessageEmitted', 'NewAgreement', 'AgreementFundsDeposited', 'AgreementFundsWithdrawn', 'AgreementFundsPayout', 'AgreementStopped'],

    // Immediately remove events when they are confirmed
    waitBlockCountBeforeConfirmationRemoved: 0,

    // Specify behavior of EventsEmitter, that retrieves events from blockchain and pass them onwards for further processing.
    eventsEmitter: {
      // If to use polling strategy, if false then listening is used.
      polling: true,

      // Interval in milliseconds, how often is blockchain checked.
      pollingInterval: 5000,

      // Starting block that upon first start of the service, will the blockchain be crawled for the past events.
      startingBlock: 'genesis',

      // Number of blocks that will be waited before passing an event for further processing.
      confirmations: 6
    },

    // Specify behavior of NewBlockEmitter, that detects new blocks on blockchain.
    newBlockEmitter: {
      // If to use polling strategy, if false then listening is used.
      polling: true
    }
  },

  log: {
    level: "warn",
    filter: null,
    path: null
  }
}
